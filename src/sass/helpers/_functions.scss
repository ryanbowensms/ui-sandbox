// sets the text colour based on the lightness of background color argument
// optional font colour argument, will default to primary-color

@function set-text-color($bgcolor, $dark : $primary-color, $light: $white) {
  @if (lightness($bgcolor) > 48) {
    @return $dark;
  } @else {
    @return $light;
  }
}


// Bootstrap buttons helper (normal) - just pass a BG color, optional text color

@mixin bootstrap-button($bgcolor: lightgreen, $color: #111) {
  background-color: $bgcolor;
  border-color: darken($bgcolor, 2%);
  color: set-text-color($bgcolor, $color);
  &:hover {
    background-color: darken($bgcolor, 5%);
    border-color: darken($bgcolor, 9%);
  }
  &.focus,
  &:focus,
  &:not(:disabled):not(.disabled):active:focus {
    box-shadow:0 0 0 0.2rem rgba($bgcolor, .6);
  }
  &:not(:disabled):not(.disabled):active{
    background-color: darken($bgcolor, 9%);
    border-color: darken($bgcolor, 11%);
  }
  &:disabled {
    background-color: lighten($bgcolor, 2%);
    border-color: lighten($bgcolor, 2%);
    cursor: default;
  }
}

// Bootstrap buttons helper (outline) - just pass a BG color, optional text color

@mixin bootstrap-outline-button($color: lightblue) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;
  &:hover:not(:disabled) {
    background-color: darken($color, 5%);
    border-color: darken($color, 9%);
    color: #fff;
  }
  &.focus,
  &:focus,
  &:not(:disabled):not(.disabled):active:focus {
    box-shadow:0 0 0 0.2rem rgba($color, .6);
  }
  &:not(:disabled):not(.disabled):active{
    background-color: darken($color, 9%);
    border-color: darken($color, 11%);
  }
  &:disabled {
    color: lighten($color, 2%);
    border-color: lighten($color, 2%);
    cursor: default;
  }
}


// heading mixins - to aid with vertical rhythm
@mixin heading {
  font-weight: $fontweight-light;
  font-family: inherit;
  margin-bottom: 0.35em;
  line-height: 1.2;
  color: $primary-color;
}

@mixin heading-1 {
  @include heading;
  font-size: 3.375em;
}

@mixin heading-2 {
  @include heading;
  font-size: 2.966em;
}

@mixin heading-3 {
  @include heading;
  font-size: 1.5em;
}

@mixin heading-4 {
  @include heading;
  font-size: 1.318em;
}

@mixin heading-5 {
  @include heading;
  font-size: 1em;
}

@mixin heading-6 {
  @include heading;
  font-size: 0.875em;
}


// transition mixin
// @include transition(all, 2s, ease-out)

@mixin transition($what: all, $time: 0.2s, $how: ease-in-out) {
  -webkit-transition: $what $time $how;
  -moz-transition: $what $time $how;
  -ms-transition: $what $time $how;
  -o-transition: $what $time $how;
  transition: $what $time $how;
}


// animation mixins

@mixin fadeout {
  animation-name:fade-out;
  animation-duration:.2s;
  animation-iteration-count: 1;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
}

@mixin fadein ($duration:.2s, $delay:.4s) {
  animation-name: fade-in;
  animation-duration:$duration;
  animation-iteration-count: 1;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
  animation-delay: $delay;
}

@mixin slideup {
  animation-name: slide-up;
  animation-duration:.3s;
  animation-iteration-count: 1;
  animation-timing-function: ease;
  animation-fill-mode: forwards;
}

@mixin loading-balls {
  animation-name: bouncedelay;
  animation-duration:1.5s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
}
